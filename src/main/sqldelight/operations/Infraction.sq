getInfraction:
    SELECT * FROM infraction
--     SELECT infraction.*, user.* FROM infraction
--     INNER JOIN user ON user.id = infraction.infractor_id OR user.id = infraction.target_id
    WHERE id = :id;

getInfractionCount:
    SELECT COUNT(*) FROM infraction;

getAllInfractions:
    SELECT * FROM infraction;
--     SELECT infraction.*, user.* FROM infraction;
--     INNER JOIN user ON user.id = infraction.infractor_id OR user.id = infraction.target_id;

getActiveExpirableInfractions:
    SELECT * FROM infraction
    WHERE active = TRUE AND expires IS NOT NULL;

getInfractionsByInfractor:
    SELECT * FROM infraction
--     SELECT infraction.*, user.* FROM infraction
--     INNER JOIN user ON user.id = infraction.infractor_id OR user.id = infraction.target_id
    WHERE infractor_id = :id;

getInfractionsByUser:
    SELECT * FROM infraction
--     SELECT infraction.*, user.* FROM infraction
--     INNER JOIN user ON user.id = infraction.infractor_id OR user.id = infraction.target_id
    WHERE target_id = :id;

getActiveExpirableInfractionsByUser:
    SELECT * FROM infraction
--     SELECT infraction.*, user.* FROM infraction
--     INNER JOIN user ON user.id = infraction.infractor_id OR user.id = infraction.target_id
    WHERE target_id = :id AND active = TRUE AND expires IS NOT NULL;

getLastInfraction:
    SELECT * FROM infraction ORDER BY created DESC LIMIT 1;

setInfractionActive:
    UPDATE infraction
    SET active = :active
    WHERE id = :id;

updateInfraction:
    UPDATE infraction
    SET reason = :reason,
        infractor_id = :infractor_id,
        target_id = :target_id,
        created = :created,
        expires = :expires,
        active = :active,
        infraction_type = :infraction_type
    WHERE id = :id;

addInfraction :
    INSERT INTO infraction(reason, infractor_id, target_id, expires, active, infraction_type)
        VALUES (:reason, :infractor_id, :target_id, :expires, :active, :infraction_type);
