buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

plugins {
    id 'application'

    id 'com.github.jakemarsden.git-hooks' version '0.0.1'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'io.gitlab.arturbosch.detekt' version '1.13.1'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'com.squareup.sqldelight' version '1.4.3'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.10'
}

group 'net.fabricmc.bot'
targetCompatibility = 1.11
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    jcenter()

    maven {
        name = 'Kord'
        url = 'https://dl.bintray.com/kordlib/Kord'
    }

    maven {
        name = 'KotDis'
        url = 'https://maven.kotlindiscord.com/repository/maven-snapshots/'
    }
}

dependencies {
    // Linter
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.13.1"

    // Kotlin deps
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // Kotlin scripting
    implementation 'org.jetbrains.kotlin:kotlin-compiler-embeddable'
    implementation 'org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable'
    implementation 'org.jetbrains.kotlin:kotlin-script-runtime'
    implementation 'org.jetbrains.kotlin:kotlin-script-util'

    // Kord Extensions framework
    implementation 'com.kotlindiscord.kord.extensions:kord-extensions:1.2-SNAPSHOT'

    // Config framework
    implementation 'com.uchuhimo:konf:0.22.1'
    implementation 'com.uchuhimo:konf-toml:0.22.1'

    // Logging deps
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.github.microutils:kotlin-logging:2.0.3'
    implementation 'org.codehaus.groovy:groovy:3.0.4'  // For logback config

    // Database: https://cashapp.github.io/sqldelight/jvm_mysql/
    implementation 'com.squareup.sqldelight:coroutines-extensions-jvm:1.4.3'
    implementation 'com.squareup.sqldelight:jdbc-driver:1.4.3'
    implementation 'com.zaxxer:HikariCP:3.4.5'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.+'

    // (De-)Serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.0-RC2'

    // URL Filtering
    implementation 'org.nibor.autolink:autolink:0.10.0'

    // HTTP (Already used by kord)
    implementation 'io.ktor:ktor-http:1.4.0'
    implementation 'io.ktor:ktor-client-cio:1.4.0'
}

application {
    mainClassName = 'net.fabricmc.bot.AppKt'
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

detekt {
    buildUponDefaultConfig = true
    config = files("detekt.yml")
}

gitHooks {
    hooks = ['pre-commit': 'detekt']
}

sqldelight {
    FabricBotDB {
        deriveSchemaFromMigrations = true
        dialect = "mysql"
        migrationOutputDirectory = file("$buildDir/resources/main/migrations")
        packageName = "net.fabricmc.bot.database"
        schemaOutputDirectory = file("src/main/sqldelight/databases")
        sourceFolders = ["sqldelight"]
    }
}

jar {
    manifest {
        attributes(
                "Main-Class": "net.fabricmc.bot.AppKt"
        )
    }
}

compileKotlin.configure {
    dependsOn "generateMainFabricBotDBMigrations"
}

compileKotlin {
    kotlinOptions.freeCompilerArgs = [
            "-XXLanguage:+NewInference",
            "-Xopt-in=kotlin.RequiresOptIn"
    ]
}

processResources {
    dependsOn "generateBuildInfo"

    from "src/main/resources/build.properties"
}

task generateBuildInfo() {
    outputs.files "src/main/resources/build.properties"

    doLast {
        new File("src/main/resources/build.properties").text = """
            version=$project.version
        """.stripIndent().strip()
    }
}
