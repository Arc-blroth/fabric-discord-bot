plugins {
    id 'application'

//    id 'com.github.jakemarsden.git-hooks' version '0.0.1'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'io.gitlab.arturbosch.detekt' version '1.8.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
}

group 'net.fabricmc.bot'
targetCompatibility = 1.11
version '1.0-SNAPSHOT'

repositories {
    jcenter()

    maven {
        name = 'Kord'
        url = 'https://dl.bintray.com/kordlib/Kord'
    }

    maven {
        name = 'KotDis'
        url = 'https://maven.kotlindiscord.com/repository/maven-snapshots/'
    }
}

dependencies {
    // Linter
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.8.0"

    // Kotlin deps
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // Kord Extensions framework
    implementation 'com.kotlindiscord.kord.extensions:kord-extensions:1.1-SNAPSHOT'

    // Config framework
    implementation 'com.uchuhimo:konf:0.22.1'

    // Logging deps
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.github.microutils:kotlin-logging:1.7.9'
    implementation 'org.codehaus.groovy:groovy:3.0.4'  // For logback config
}

application {
    mainClassName = 'net.fabricmc.bot.AppKt'
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

detekt {
    buildUponDefaultConfig = true
    config = files("detekt.yml")
}

//gitHooks {
//    hooks = ['pre-commit': 'detekt']
//}

jar {
    manifest {
        attributes(
                "Main-Class": "net.fabricmc.bot.AppKt"
        )
    }
}


processResources {
    dependsOn "generateBuildInfo"

    from "src/main/resources/build.properties"
}

task generateBuildInfo() {
    outputs.files "src/main/resources/build.properties"

    doLast {
        new File("src/main/resources/build.properties").text = """
            version=$project.version
        """.stripIndent().strip()
    }
}
